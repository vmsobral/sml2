<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" name="SML" version="8.1.0">
  <ownedViewpoints name="sml_viewpoint" label="SML" modelFileExtension="sml">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="sml_diagram" label="SML Diagram" initialisation="true" showOnStartup="true" domainClass="RefOntoUML.Model">
      <metamodel href="http://www.example.org/ctx#/"/>
      <metamodel href="http://www.example.org/sml#/"/>
      <metamodel href="../../br.ufes.inf.nemo.ontouml.refontouml/model/RefOntoUML.ecore#/"/>
      <diagramInitialisation>
        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[self/]">
          <subModelOperations xsi:type="tool:If" conditionExpression="[self.primitiveContextElements->filter(RefOntoUML::DataType)->select(d|d.name='Time')->size()=0/]">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.DataType" referenceName="primitiveContextElements" variableName="datatype">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="Time"/>
              <subModelOperations xsi:type="tool:If" conditionExpression="[siblings(RefOntoUML::FormalAssociation)->select(d|d.name='within the past')->size()=0/]">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[eContainer()/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.FormalAssociation" referenceName="primitiveContextElements">
                    <subModelOperations xsi:type="tool:SetValue" featureName="ownedEnd" valueExpression="[Set{datatype, datatype}/]"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="within the past"/>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </subModelOperations>
          </subModelOperations>
          <subModelOperations xsi:type="tool:If" conditionExpression="[self.primitiveContextElements->filter(RefOntoUML::DataType)->select(d|d.name='Duration')->size()=0/]">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.DataType" referenceName="primitiveContextElements" variableName="datatype">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="Duration"/>
            </subModelOperations>
          </subModelOperations>
          <subModelOperations xsi:type="tool:If" conditionExpression="[self.primitiveContextElements->filter(RefOntoUML::Kind)->select(e|e.name='Situation')->size()=0/]">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.Kind" referenceName="primitiveContextElements" variableName="situation">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="Situation"/>
              <subModelOperations xsi:type="tool:SetValue" featureName="isAbstract" valueExpression="[true/]"/>
              <subModelOperations xsi:type="tool:For" expression="[Sequence{'after','before'}/]" iteratorName="operator">
                <subModelOperations xsi:type="tool:If" conditionExpression="[siblings(RefOntoUML::FormalAssociation)->select(d|d.name=operator)->size()=0/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[eContainer()/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.FormalAssociation" referenceName="primitiveContextElements">
                      <subModelOperations xsi:type="tool:SetValue" featureName="ownedEnd" valueExpression="[Set{situation, situation}/]"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:operator"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.Property" referenceName="attribute">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="final time"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="[eContainer(SMLModel).primitiveContextElements->filter(RefOntoUML::DataType)->select(d|d.name='Time')->first()/]"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.Property" referenceName="attribute">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="start time"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="[eContainer(SMLModel).primitiveContextElements->filter(RefOntoUML::DataType)->select(d|d.name='Time')->first()/]"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="RefOntoUML.Property" referenceName="attribute">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="duration"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="datatype" valueExpression="[eContainer(SMLModel).primitiveContextElements->filter(RefOntoUML::DataType)->select(d|d.name='Duration')->first()/]"/>
              </subModelOperations>
            </subModelOperations>
          </subModelOperations>
        </firstModelOperations>
      </diagramInitialisation>
      <defaultLayer name="Default">
        <edgeMappings name="association" label="Association" semanticCandidatesExpression="[eAllContents()/]" sourceMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity']" targetMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator']" targetFinderExpression="feature:entity" sourceFinderExpression="feature:relator" domainClass="sml.Link" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelExpression="[isOfType.name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="parameter_link" label="Parameter Link" labelDirectEdit="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@additionalLayers[name='test_layer']/@toolSections.0/@ownedTools[name='label_situation']" sourceMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@borderedNodeMappings[name='parameter'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator']" targetMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@borderedNodeMappings[name='parameter']" targetFinderExpression="feature:nodeParameter">
          <style targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="[nodeParameter.name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="formal_relation" label="Formal Relation" semanticCandidatesExpression="[eAllContents()/]" sourceMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref']/@borderedNodeMappings[name='parameter_ref'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='function']" targetMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='literal'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref']/@borderedNodeMappings[name='parameter_ref'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='block'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='function']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" domainClass="sml.ComparativeRelation" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <beginLabelStyleDescription showIcon="false" labelExpression="[if (self.source.sourceRelation->excluding(self)->size() > 0) then '{or}' else '' endif/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </beginLabelStyleDescription>
            <centerLabelStyleDescription labelExpression="[relation.name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="[not(parameter.oclIsUndefined()) and not(parameter = '') and not isNegated/]">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="[if (self.source.sourceRelation->excluding(self)->size() > 0) then '{or}' else '' endif/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <centerLabelStyleDescription labelExpression="[relation.name.concat(' [').concat(parameter).concat(']')/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[(not parameter.oclIsUndefined()) and not(parameter = '') and isNegated/]">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="[if (self.source.sourceRelation->excluding(self)->size() > 0) then '{or}' else '' endif/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <centerLabelStyleDescription labelExpression="['not '.concat(relation.name).concat(' [').concat(parameter).concat(']')/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[(parameter.oclIsUndefined() or (parameter = '')) and isNegated/]">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="[if (self.source.sourceRelation->excluding(self)->size() > 0) then '{or}' else '' endif/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <centerLabelStyleDescription labelExpression="['not '.concat(relation.name)/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="entity_attribute" label="Participant Attribute" sourceMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute']" targetMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref']" targetFinderExpression="feature:entity">
          <style lineStyle="dot" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="function_parameter" label="Function Parameter" sourceMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='function'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='literal']" targetMapping="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='function']" targetFinderExpression="[eContainer()/]" sourceFinderExpression="feature:value" domainClass="sml.Parameter" useDomainElement="true">
          <style lineStyle="dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="[parameter.name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Situation" labelDirectEdit="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@additionalLayers[name='test_layer']/@toolSections.0/@ownedTools[name='label_situation']" semanticCandidatesExpression="[elements/]" domainClass="sml.SituationType">
          <borderedNodeMappings name="parameter" label="Parameter" labelDirectEdit="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@additionalLayers[name='test_layer']/@toolSections.0/@ownedTools[name='label_situation']" semanticCandidatesExpression="[eContents()/]" domainClass="sml.SituationTypeParameter">
            <style xsi:type="style:LozengeNodeDescription" showIcon="false" labelExpression="" resizeKind="NSEW" widthComputationExpression="2" heightComputationExpression="2">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </borderedNodeMappings>
          <subNodeMappings name="entity" label="Entity" semanticCandidatesExpression="[eContents()/]" domainClass="sml.EntityParticipant">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[isOfType.name/]" labelPosition="node" resizeKind="NSEW" width="5" height="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
            <conditionnalStyles predicateExpression="[isOfType.isAbstract/]">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelFormat="italic" showIcon="false" labelExpression="[isOfType.name/]" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <subNodeMappings name="relator" label="Relator" semanticCandidatesExpression="[eContents()/]" domainClass="sml.RelatorParticipant">
            <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[isOfType.name/]" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="attribute" label="Attribute" semanticCandidatesExpression="[eContents()/]" domainClass="sml.AttributeReference">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[attribute.name/]" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="6" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="literal" label="Literal" labelDirectEdit="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@additionalLayers[name='test_layer']/@toolSections.0/@ownedTools[name='label_literal']" semanticCandidatesExpression="[eContents()/]" domainClass="sml.Literal">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[value/]" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="6" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="function" label="Function" semanticCandidatesExpression="[eContents()/]" domainClass="sml.Function">
            <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="[function.name/]" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="6" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </subNodeMappings>
          <subContainerMappings name="block" label="Situation Block" semanticCandidatesExpression="[eAllContents()/]" domainClass="sml.SituationTypeBlock" reusedNodeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='literal']">
            <style xsi:type="style:FlatContainerStyleDescription" showIcon="false" labelExpression="OR">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="situation_ref" label="Situation Participant" semanticCandidatesExpression="[eContents()/]" domainClass="sml.SituationParticipant">
            <borderedNodeMappings name="parameter_ref" label="Parameter Reference" semanticCandidatesExpression="[parameter/]" domainClass="sml.SituationParameterReference">
              <style xsi:type="style:LozengeNodeDescription" labelExpression="[parameter.name/]" resizeKind="NSEW" widthComputationExpression="2" heightComputationExpression="2">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" showIcon="false" labelExpression="['  '.concat(situationType.name)/]" labelAlignment="LEFT" roundedCorner="true" foregroundColor="//@userColorsPalettes[name='Cores']/@entries[name='Past']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
            <conditionnalStyles predicateExpression="[self.oclIsTypeOf(ExistsSituation) and self.oclAsType(ExistsSituation).isNegated/]">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" showIcon="false" labelExpression="['  !∃ '.concat(situationType.name)/]" labelAlignment="LEFT" roundedCorner="true" foregroundColor="//@userColorsPalettes[name='Cores']/@entries[name='Past']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.oclIsTypeOf(ExistsSituation) and not self.oclAsType(ExistsSituation).isNegated/]">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" showIcon="false" labelExpression="['  ∃ '.concat(situationType.name)/]" labelAlignment="LEFT" roundedCorner="true" foregroundColor="//@userColorsPalettes[name='Cores']/@entries[name='Past']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" showIcon="false" labelExpression="['  '.concat(name)/]" labelAlignment="LEFT" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="entity_tools" label="Entities">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_entity" label="Entity" precondition="[container.oclIsTypeOf(SituationType) or container.oclIsTypeOf(SituationTypeBlock)/]" forceRefresh="true" candidatesExpression="[eContainer(SMLModel).contextModel.eAllContents(Class)->excluding(Relator)/]" message="Message" iconPath="/org.eclipse.sirius.ui/icons/full/obj16/Decoration.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.EntityParticipant" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="isOfType" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_relator" label="Relator" precondition="[container.oclIsTypeOf(SituationType) or container.oclIsTypeOf(SituationTypeBlock)/]" forceRefresh="true" candidatesExpression="[eContainer(SMLModel).contextModel.eAllContents(Relator)/]" message="Message" iconPath="/org.eclipse.sirius.ui/icons/full/obj16/Decoration.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.RelatorParticipant" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="isOfType" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_attribute" label="Attribute" precondition="[container.oclIsTypeOf(EntityParticipant) or container.oclIsTypeOf(RelatorParticipant)/]" forceRefresh="true" candidatesExpression="[isOfType.attribute->union(isOfType.generalization.general.attribute)/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[container.eContainer()/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.AttributeReference" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="attribute" valueExpression="var:element"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_literal" label="Literal" precondition="[container.oclIsTypeOf(SituationType) or container.oclIsTypeOf(SituationTypeBlock)/]" forceRefresh="true" candidatesExpression="[eContainer(SMLModel).contextModel.eAllContents()->union(eContainer(SMLModel).primitiveContextElements.oclAsSet())->filter(RefOntoUML::DataType)/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.Literal" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="dataType" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="relation_tools" label="Relations">
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="new_assoc_ed" label="Association" edgeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@edgeMappings[name='association'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@edgeMappings[name='parameter_link'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@edgeMappings[name='entity_attribute']" iconPath="/org.eclipse.sirius.ui/icons/full/obj16/Decoration.gif" extraSourceMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref']" extraTargetMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[source.eContainer(SituationType)/]">
                <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclIsTypeOf(RelatorParticipant) and target.oclIsTypeOf(EntityParticipant)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.Link" referenceName="elements">
                    <subModelOperations xsi:type="tool:SetValue" featureName="relator" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclIsTypeOf(RelatorParticipant) and source.oclIsTypeOf(EntityParticipant)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.Link" referenceName="elements">
                    <subModelOperations xsi:type="tool:SetValue" featureName="relator" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclIsTypeOf(SituationTypeParameter) and source.oclIsKindOf(ExportableNode)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool:SetValue" featureName="nodeReference" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclIsTypeOf(SituationTypeParameter) and target.oclIsKindOf(ExportableNode)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool:SetValue" featureName="nodeReference" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclIsKindOf(Participant) and target.oclIsKindOf(AttributeReference)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                    <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclIsKindOf(Participant) and source.oclIsKindOf(AttributeReference)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="new_formal_ed" label="Formal Relation" edgeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@edgeMappings[name='formal_relation']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[source.eContainer(SituationType)/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.ComparativeRelation" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="situation_tool" label="Situations">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="new_situation_ref" label="Situation" containerMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsTypeOf(SituationType)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationParticipant" referenceName="elements"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsTypeOf(SMLModel)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationType" referenceName="elements"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="new_param" label="Parameter" nodeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@borderedNodeMappings[name='parameter'] //@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='situation_ref']/@borderedNodeMappings[name='parameter_ref']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsTypeOf(SituationType)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationTypeParameter" referenceName="parameter"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsKindOf(SituationParticipant)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[eContainer()/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationParameterReference" referenceName="elements"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:SetValue" featureName="parameter" valueExpression="var:instance"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="situationp_tool" label="Situation Participants">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_sit_ref" label="Situation" precondition="[container.oclIsTypeOf(SituationType)/]" candidatesExpression="[eContainer(SMLModel).eAllContents(SituationType)/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationParticipant" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="situationType" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_sit_ref_exists" label="Exists" precondition="[container.oclIsTypeOf(SituationType)/]" candidatesExpression="[eContainer(SMLModel).eAllContents(SituationType)/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.ExistsSituation" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="situationType" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_sit_ref_param" label="Parameter" precondition="[container.oclIsTypeOf(SituationParticipant)/]" candidatesExpression="[eContainer(SituationType).parameter/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[eContainer(SituationType)/]">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationParameterReference" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="situation" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="parameter" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="function_tools" label="Functions">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_function" label="Function" precondition="[container.oclIsTypeOf(SituationType) or container.oclIsTypeOf(SituationTypeBlock)/]" forceRefresh="true" candidatesExpression="[eContainer(SMLModel).contextModel.eAllContents(FormalAssociation)/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.Function" referenceName="elements">
                  <subModelOperations xsi:type="tool:SetValue" featureName="function" valueExpression="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="new_fparam_ed" label="Parameter" edgeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@edgeMappings[name='function_parameter']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.Parameter" referenceName="parameter">
                  <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="var:source"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="test_layer" label="Test Tools">
        <toolSections name="extra_tools" label="Extra Tools">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="new_entity" label="Entity" nodeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='entity']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.EntityParticipant" referenceName="elements"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="new_relator" label="Relator" nodeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='relator']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.RelatorParticipant" referenceName="elements"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="label_situation" label="Edit Situation Label" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[self/]">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="debug" label="debug" id="fr.obeo.dsl.viewpoint.business.api.action.printVariables"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="[arg0/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="wzd_sit_ref" label="Situation" precondition="[container.cast(&quot;SituationType&quot;)/]" candidatesExpression="[eContainer(&quot;SMLModel&quot;).eAllContents(&quot;SituationType&quot;)/]" message="Message">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsTypeOf(SituationType)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationParticipant" referenceName="elements"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsTypeOf(SMLModel)/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationType" referenceName="elements"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="label_literal" label="Edit Situation Label" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[self/]">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="debug" label="debug" id="fr.obeo.dsl.viewpoint.business.api.action.printVariables"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="[arg0/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:PopupMenu" name="teste_pp" label="Teste">
            <menuItemDescription xsi:type="tool:OperationAction" name="xteste" label="Name">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ExternalJavaAction" name="debug" label="Debug" id="fr.obeo.dsl.viewpoint.business.api.action.printVariables">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[diagram/]">
                    <subModelOperations xsi:type="tool:ExternalJavaAction" name="debug" label="Debug" id="fr.obeo.dsl.viewpoint.business.api.action.printVariables"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="new_lireral" label="Literal" nodeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='literal']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.Literal" referenceName="elements"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="new_block" label="Disjoint" containerMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subContainerMappings[name='block']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.SituationTypeBlock" referenceName="elements"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="new_attribute" label="Attribute" nodeMappings="//@ownedViewpoints[name='sml_viewpoint']/@ownedRepresentations[name='sml_diagram']/@defaultLayer/@containerMappings[name='Situation']/@subNodeMappings[name='attribute']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="sml.AttributeReference" referenceName="elements"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
  </ownedViewpoints>
  <userColorsPalettes name="Cores">
    <entries xsi:type="description:InterpolatedColor" name="Past" colorValueComputationExpression="[if (isPast = true) then 1 else 0 endif/]">
      <colorSteps associatedValue="0">
        <associatedColor href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
      </colorSteps>
      <colorSteps associatedValue="1">
        <associatedColor href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
      </colorSteps>
    </entries>
  </userColorsPalettes>
</description:Group>
